{
  "_args": [
    [
      {
        "raw": "react-native-autocomplete-input",
        "scope": null,
        "escapedName": "react-native-autocomplete-input",
        "name": "react-native-autocomplete-input",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/msuhardi/AwesomeProject"
    ]
  ],
  "_from": "react-native-autocomplete-input@latest",
  "_id": "react-native-autocomplete-input@3.3.1",
  "_inCache": true,
  "_location": "/react-native-autocomplete-input",
  "_nodeVersion": "8.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-autocomplete-input-3.3.1.tgz_1499191799255_0.8674259514082223"
  },
  "_npmUser": {
    "name": "laurenceb",
    "email": "cheese@byteburgers.com"
  },
  "_npmVersion": "5.0.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-autocomplete-input",
    "scope": null,
    "escapedName": "react-native-autocomplete-input",
    "name": "react-native-autocomplete-input",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-autocomplete-input/-/react-native-autocomplete-input-3.3.1.tgz",
  "_shasum": "70a1be97d98bddb63d94879739069610d1817f54",
  "_shrinkwrap": null,
  "_spec": "react-native-autocomplete-input",
  "_where": "/Users/msuhardi/AwesomeProject",
  "author": {
    "name": "Laurence Bortfeld"
  },
  "bugs": {
    "url": "https://github.com/l-urence/react-native-autocomplete-input/issues"
  },
  "dependencies": {},
  "description": "Pure javascript autocomplete input for react-native",
  "devDependencies": {
    "babel-eslint": "^7.1.1",
    "babel-preset-react-native": "^1.9.1",
    "babel-register": "^6.9.0",
    "chai": "^3.5.0",
    "enzyme": "^2.3.0",
    "eslint": "^3.5.0",
    "eslint-config-airbnb": "^14.0.0",
    "eslint-plugin-babel": "^4.0.1",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "^3.0.2",
    "eslint-plugin-react": "^6.2.0",
    "estraverse-fb": "^1.3.1",
    "mocha": "^3.2.0",
    "nyc": "^10.1.2",
    "react": "~15.4.0-rc.4",
    "react-addons-test-utils": "^15.2.1",
    "react-dom": "^15.2.1",
    "react-native": "^0.40.0",
    "react-native-mock": "^0.3.1",
    "sinon": "^1.17.4"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-c5wgl+p08ksfj54bVDFwyq7yxr+AW9Ac9dgz43ukGG9OJW3g1gU4Dy0vCTUIDUHlR++eCEGzkGc70vm7gMqj8Q==",
    "shasum": "70a1be97d98bddb63d94879739069610d1817f54",
    "tarball": "https://registry.npmjs.org/react-native-autocomplete-input/-/react-native-autocomplete-input-3.3.1.tgz"
  },
  "files": [
    "LICENSE",
    "README.md",
    "index.js"
  ],
  "gitHead": "80a936b17add6fc42f4a23f58f938c7a5dbb1a05",
  "homepage": "https://github.com/l-urence/react-native-autocomplete-input#readme",
  "keywords": [
    "react-native",
    "iOS",
    "input",
    "Android",
    "autocomplete"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "laurenceb",
      "email": "cheese@byteburgers.com"
    }
  ],
  "name": "react-native-autocomplete-input",
  "optionalDependencies": {},
  "options": {
    "mocha": "--require react-native-mock/mock.js --compilers js:babel-register ./__tests__/**/*.js"
  },
  "readme": "# react-native-autocomplete-input\n[![npm version](https://badge.fury.io/js/react-native-autocomplete-input.svg)](https://badge.fury.io/js/react-native-autocomplete-input)\n[![Build Status](https://travis-ci.org/l-urence/react-native-autocomplete-input.svg)](https://travis-ci.org/l-urence/react-native-autocomplete-input)\n\nA pure JS autocomplete component for React Native. Use this component in your own projects or use it as inspiration to build your own autocomplete.\n\n![Autocomplete Example](https://raw.githubusercontent.com/l-urence/react-native-autocomplete-input/master/example.gif)\n\n## How to use react-native-autocomplete-input\nTested with RN >= 0.26.2. If you want to use RN < 0.26 try to install react-native-autocomplete-input <= 0.0.5.\n\n### Installation\n\n```shell\n$ npm install --save react-native-autocomplete-input\n```\n\nor install HEAD from github.com:\n\n```shell\n$ npm install --save l-urence/react-native-autocomplete-input\n```\n\n### Example\n\n```javascript\n// ...\n\nrender() {\n  const { query } = this.state;\n  const data = this._filterData(query)\n  return (<Autocomplete\n    data={data}\n    defaultValue={query}\n    onChangeText={text => this.setState({ query: text })}\n    renderItem={data => (\n      <TouchableOpacity onPress={() => this.setState({ query: data })}>\n        <Text>{data}</Text>\n      </TouchableOpacity>\n    )}\n  />);\n}\n\n// ...\n```\n\nA complete example for Android and iOS can be found [here](//github.com/l-urence/react-native-autocomplete-input/blob/master/example/).\n\n### Android\nAndroid does not support overflows ([#20](https://github.com/l-urence/react-native-autocomplete-input/issues/20)), for that reason it is necessary to wrap the autocomplete into a *absolute* positioned view on Android. This will  allow the suggestion list to overlap other views inside your component.\n\n```javascript\n//...\n\nrender() {\n  return(\n    <View>\n      <View style={styles.autocompleteContainer}>\n        <Autocomplete {/* your props */} />\n      </View>\n      <View>\n        <Text>Some content</Text>\n      <View />\n    <View>\n  );\n}\n\n//...\n\nconst styles = StyleSheet.create({\n  autocompleteContainer: {\n    flex: 1,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    zIndex: 1\n  }\n});\n\n```\n\n### Props\n| Prop | Type | Description |\n| :------------ |:---------------:| :-----|\n| containerStyle | style | These styles will be applied to the container which surrounds the autocomplete component. |\n| hideResults | bool | Set to `true` to hide the suggestion list.\n| data | array | An array with suggestion items to be rendered in `renderItem(item)`. Any array with length > 0 will open the suggestion list and any array with length < 1 will hide the list. |\n| inputContainerStyle | style | These styles will be applied to the container which surrounds the textInput component. |\n| listContainerStyle | style | These styles will be applied to the container which surrounds the result list. |\n| listStyle | style | These style will be applied to the result list. |\n| onShowResult | function | `onShowResult` will be called when the autocomplete suggestions appear or disappear. |\n| onStartShouldSetResponderCapture | function | `onStartShouldSetResponderCapture` will be passed to the result list view container ([onStartShouldSetResponderCapture](https://facebook.github.io/react-native/docs/gesture-responder-system.html#capture-shouldset-handlers)). |\n| renderItem | function | `renderItem` will be called to render the data objects which will be displayed in the result view below the text input. |\n| renderSeparator | function | `renderSeparator` will be called to render the list separators which will be displayed between the list elements in the result view below the text input. |\n| renderTextInput | function | render custom TextInput. All props passed to this function. |\n\n## Known issues\n* By default the autocomplete will not behave as expected inside a `<ScrollView />`. Set the scroll view's prop to fix this: `keyboardShouldPersistTaps={true}` for RN <= 0.39, or `keyboardShouldPersistTaps='always'` for RN >= 0.40. ([#5](https://github.com/l-urence/react-native-autocomplete-input/issues/5)).\n* If you want to test with Jest add ```jest.mock('react-native-autocomplete-input', () => 'Autocomplete');``` to your test.\n\n## Contribute\nFeel free to open issues or do a PR!\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/l-urence/react-native-autocomplete-input.git"
  },
  "scripts": {
    "coverage": "nyc mocha $npm_package_options_mocha && node_modules/.bin/nyc report --reporter=lcov",
    "lint": "eslint ./*.js ./example/*.js",
    "test": "npm run lint && npm run testonly",
    "testonly": "mocha $npm_package_options_mocha"
  },
  "version": "3.3.1"
}
